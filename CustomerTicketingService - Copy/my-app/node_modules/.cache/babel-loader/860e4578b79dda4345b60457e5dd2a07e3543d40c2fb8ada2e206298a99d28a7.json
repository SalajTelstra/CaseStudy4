{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\e040420\\\\Desktop\\\\CustomerSupportAPI\\\\CustomerTicketingService\\\\my-app\\\\src\\\\components\\\\ManagerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ManagerDashboard.css';\nimport api from '../api'; // Adjust based on your API setup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagerDashboard = () => {\n  _s();\n  const [agents, setAgents] = useState([]);\n  const [tickets, setTickets] = useState({}); // Initialize as an object\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newAgentId, setNewAgentId] = useState(''); // New agent for reassignment\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    setLoading(true);\n    fetchAgentsAndTicketCounts();\n  }, []);\n\n  // Fetch agents and ticket counts from the API\n  const fetchAgentsAndTicketCounts = async () => {\n    try {\n      const [agentsResponse, ticketCountsResponse] = await Promise.all([api.get('/users/allAgentsDetails'), api.get('/tickets/ticketCounts') // Adjust API route to fetch ticket counts\n      ]);\n      setAgents(agentsResponse.data);\n\n      // Map ticket counts to each agent\n      const ticketCounts = ticketCountsResponse.data.reduce((acc, curr) => {\n        acc[curr.agentId] = acc[curr.agentId] || [];\n        acc[curr.agentId].push(curr); // Assuming each `curr` has ticket details\n        return acc;\n      }, {});\n      setTickets(ticketCounts);\n    } catch (error) {\n      setError('Error fetching data.');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle ticket reassignment\n  const handleReassignTicket = async ticketId => {\n    try {\n      await api.put(`/tickets/${ticketId}/reassign`, {\n        newAgentId\n      }); // Adjust API and payload\n      fetchAgentsAndTicketCounts(); // Refresh data\n    } catch (error) {\n      console.error('Error reassigning ticket:', error);\n    }\n  };\n\n  // Loading and Error Handling\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manager-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manager Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agents-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Agents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Agent Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Assigned Tickets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: agents.map(agent => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (tickets[agent._id] || []).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), \" \"]\n          }, agent._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tickets-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ticket ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Assigned Agent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Reassign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(tickets).flat().map(ticket =>\n          /*#__PURE__*/\n          // Flatten tickets object and map over it\n          _jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ticket._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ticket.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: agents.find(agent => agent._id === ticket.assignedTo) ? agent.name : 'Unassigned'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: newAgentId,\n                onChange: e => setNewAgentId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Agent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), agents.map(agent => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: agent._id,\n                  children: agent.name\n                }, agent._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleReassignTicket(ticket._id),\n                children: \"Reassign\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, ticket._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ManagerDashboard, \"G/4ireppJW0itFdc2rk9WA3qAG0=\", false, function () {\n  return [useNavigate];\n});\n_c = ManagerDashboard;\nexport default ManagerDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","ManagerDashboard","_s","agents","setAgents","tickets","setTickets","loading","setLoading","error","setError","newAgentId","setNewAgentId","navigate","fetchAgentsAndTicketCounts","agentsResponse","ticketCountsResponse","Promise","all","get","data","ticketCounts","reduce","acc","curr","agentId","push","console","handleReassignTicket","ticketId","put","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","agent","name","_id","length","Object","values","flat","ticket","title","find","assignedTo","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/e040420/Desktop/CustomerSupportAPI/CustomerTicketingService/my-app/src/components/ManagerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ManagerDashboard.css';\r\nimport api from '../api'; // Adjust based on your API setup\r\n\r\nconst ManagerDashboard = () => {\r\n  const [agents, setAgents] = useState([]);\r\n  const [tickets, setTickets] = useState({}); // Initialize as an object\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newAgentId, setNewAgentId] = useState(''); // New agent for reassignment\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchAgentsAndTicketCounts();\r\n  }, []);\r\n\r\n  // Fetch agents and ticket counts from the API\r\n  const fetchAgentsAndTicketCounts = async () => {\r\n    try {\r\n      const [agentsResponse, ticketCountsResponse] = await Promise.all([\r\n        api.get('/users/allAgentsDetails'),\r\n        api.get('/tickets/ticketCounts') // Adjust API route to fetch ticket counts\r\n      ]);\r\n\r\n      setAgents(agentsResponse.data);\r\n\r\n      // Map ticket counts to each agent\r\n      const ticketCounts = ticketCountsResponse.data.reduce((acc, curr) => {\r\n        acc[curr.agentId] = acc[curr.agentId] || [];\r\n        acc[curr.agentId].push(curr); // Assuming each `curr` has ticket details\r\n        return acc;\r\n      }, {});\r\n\r\n      setTickets(ticketCounts);\r\n    } catch (error) {\r\n      setError('Error fetching data.');\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle ticket reassignment\r\n  const handleReassignTicket = async (ticketId) => {\r\n    try {\r\n      await api.put(`/tickets/${ticketId}/reassign`, { newAgentId }); // Adjust API and payload\r\n      fetchAgentsAndTicketCounts(); // Refresh data\r\n    } catch (error) {\r\n      console.error('Error reassigning ticket:', error);\r\n    }\r\n  };\r\n\r\n  // Loading and Error Handling\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"manager-dashboard-container\">\r\n      <h2>Manager Dashboard</h2>\r\n\r\n      {/* Display list of agents */}\r\n      <div className=\"agents-container\">\r\n        <h3>Agents</h3>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Agent Name</th>\r\n              <th>Assigned Tickets</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {agents.map(agent => (\r\n              <tr key={agent._id}>\r\n                <td>{agent.name}</td>\r\n                <td>{(tickets[agent._id] || []).length}</td> {/* Display ticket count for each agent */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Display all tickets with reassignment options */}\r\n      <div className=\"tickets-container\">\r\n        <h3>Tickets</h3>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Ticket ID</th>\r\n              <th>Title</th>\r\n              <th>Assigned Agent</th>\r\n              <th>Reassign</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.values(tickets).flat().map(ticket => ( // Flatten tickets object and map over it\r\n              <tr key={ticket._id}>\r\n                <td>{ticket._id}</td>\r\n                <td>{ticket.title}</td>\r\n                <td>{agents.find(agent => agent._id === ticket.assignedTo)? agent.name : 'Unassigned'}</td>\r\n                <td>\r\n                  <select\r\n                    value={newAgentId}\r\n                    onChange={(e) => setNewAgentId(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Agent</option>\r\n                    {agents.map(agent => (\r\n                      <option key={agent._id} value={agent._id}>\r\n                        {agent.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <button onClick={() => handleReassignTicket(ticket._id)}>Reassign</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}